export const schema = {
  models: {
    Course: {
      name: "Course",
      fields: {
        id: {
          name: "id",
          isArray: false,
          type: "ID",
          isRequired: true,
          attributes: [],
        },
        name: {
          name: "name",
          isArray: false,
          type: "String",
          isRequired: true,
          attributes: [],
        },
        scheduleDates: {
          name: "scheduleDates",
          isArray: true,
          type: "String",
          isRequired: false,
          attributes: [],
          isArrayNullable: false,
        },
        scheduleStartTime: {
          name: "scheduleStartTime",
          isArray: false,
          type: "AWSTime",
          isRequired: true,
          attributes: [],
        },
        scheduleEndTime: {
          name: "scheduleEndTime",
          isArray: false,
          type: "AWSTime",
          isRequired: true,
          attributes: [],
        },
        virtualClassLink: {
          name: "virtualClassLink",
          isArray: false,
          type: "String",
          isRequired: false,
          attributes: [],
        },
        createdAt: {
          name: "createdAt",
          isArray: false,
          type: "AWSDateTime",
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: "updatedAt",
          isArray: false,
          type: "AWSDateTime",
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
      },
      syncable: true,
      pluralName: "Courses",
      attributes: [
        {
          type: "model",
          properties: {},
        },
        {
          type: "auth",
          properties: {
            rules: [
              {
                groupClaim: "cognito:groups",
                provider: "userPools",
                allow: "groups",
                groups: ["Admin"],
                operations: ["create", "update", "delete", "read"],
              },
              {
                groupClaim: "cognito:groups",
                provider: "userPools",
                allow: "groups",
                groups: ["Students", "Teachers"],
                operations: ["read"],
              },
            ],
          },
        },
      ],
    },
    Media: {
      name: "Media",
      fields: {
        id: {
          name: "id",
          isArray: false,
          type: "ID",
          isRequired: true,
          attributes: [],
        },
        title: {
          name: "title",
          isArray: false,
          type: "String",
          isRequired: true,
          attributes: [],
        },
        type: {
          name: "type",
          isArray: false,
          type: {
            enum: "MediaType",
          },
          isRequired: true,
          attributes: [],
        },
        description: {
          name: "description",
          isArray: false,
          type: "String",
          isRequired: false,
          attributes: [],
        },
        link: {
          name: "link",
          isArray: false,
          type: "String",
          isRequired: true,
          attributes: [],
        },
        content: {
          name: "content",
          isArray: false,
          type: "String",
          isRequired: false,
          attributes: [],
        },
        groups: {
          name: "groups",
          isArray: true,
          type: "String",
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        createdAt: {
          name: "createdAt",
          isArray: false,
          type: "AWSDateTime",
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: "updatedAt",
          isArray: false,
          type: "AWSDateTime",
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
      },
      syncable: true,
      pluralName: "Media",
      attributes: [
        {
          type: "model",
          properties: {},
        },
        {
          type: "auth",
          properties: {
            rules: [
              {
                provider: "userPools",
                ownerField: "owner",
                allow: "owner",
                identityClaim: "cognito:username",
                operations: ["create", "update", "delete", "read"],
              },
              {
                groupClaim: "cognito:groups",
                provider: "userPools",
                allow: "groups",
                groups: ["Admin"],
                operations: ["create", "read", "update", "delete"],
              },
              {
                groupClaim: "cognito:groups",
                provider: "userPools",
                allow: "groups",
                groupsField: "groups",
                operations: ["read"],
                groupField: "groups",
              },
            ],
          },
        },
      ],
    },
    DynamoDBUser: {
      name: "DynamoDBUser",
      fields: {
        id: {
          name: "id",
          isArray: false,
          type: "ID",
          isRequired: true,
          attributes: [],
        },
        name: {
          name: "name",
          isArray: false,
          type: "String",
          isRequired: true,
          attributes: [],
        },
        email: {
          name: "email",
          isArray: false,
          type: "String",
          isRequired: true,
          attributes: [],
        },
        phone: {
          name: "phone",
          isArray: false,
          type: "Int",
          isRequired: false,
          attributes: [],
        },
        cognitoId: {
          name: "cognitoId",
          isArray: false,
          type: "ID",
          isRequired: true,
          attributes: [],
        },
        groups: {
          name: "groups",
          isArray: true,
          type: "String",
          isRequired: false,
          attributes: [],
          isArrayNullable: false,
        },
        createdAt: {
          name: "createdAt",
          isArray: false,
          type: "AWSDateTime",
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: "updatedAt",
          isArray: false,
          type: "AWSDateTime",
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
      },
      syncable: true,
      pluralName: "DynamoDBUsers",
      attributes: [
        {
          type: "model",
          properties: {},
        },
        {
          type: "auth",
          properties: {
            rules: [
              {
                groupClaim: "cognito:groups",
                provider: "userPools",
                allow: "groups",
                groups: ["Admin"],
                operations: ["create", "read", "update", "delete"],
              },
              {
                groupClaim: "cognito:groups",
                provider: "userPools",
                allow: "groups",
                groups: ["Students", "Teachers"],
                operations: ["read"],
              },
            ],
          },
        },
      ],
    },
  },
  enums: {
    MediaType: {
      name: "MediaType",
      values: ["LINK", "PDF", "VIDEO"],
    },
  },
  nonModels: {},
  version: "1ac0dcb57490bd5de5d61247ed2280bf",
};
